@using JITC.Models.ViewModel

@model StatisticsViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.min.js"></script>


<h1>Statistics</h1>

<div class="container">
    <h2 class="mt-3 mb-5">Taux de remplissage moyen des appareils</h2>
    <div>
        <canvas id="myChart"></canvas>
    </div>
</div>


<script>
    var ctx = document.getElementById("myChart").getContext("2d");

    var tabLabel = [];
    var labels = @Html.Raw(Json.Serialize(@Model.HelicoptersNameData));
    var data = @Html.Raw(Json.Serialize(@Model.TauxRemplissageData));

    var myChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels: labels,

        datasets: [
          {
            label: "Taux de remplissage",
            data: data, //% par vol
            backgroundColor: "rgb(191,170,143)",
          }
        ],
      },
    });


</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.min.js"></script>

<div class="container">
    <h2 class="mt-5 mb-5">Retard et raisons</h2>
    <h3>Nombre de retard : @Model.NbrRetard</h3>
    <div>
        <canvas id="myChart2"></canvas>
    </div>
</div>


<script>
    var ctx = document.getElementById("myChart2").getContext("2d");
    ctx.fillStyle ="#FFA500";
    var tabLabel = [];
    var labels = @Html.Raw(Json.Serialize(@Model.RaisonRetard));
    var data = @Html.Raw(Json.Serialize(@Model.NbrRaison));

    var myChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels: labels, //raison.
        datasets: [
          {
            label: "Nombre de retards",
            data: data, //nbr de fois que cette raison a été utiliser.
            backgroundColor: "rgb(191,170,143)",
          }
        ],
      },
    });

    myChart.render();

</script>
